1. How will you improve the performance of a React Application?

There are so many steps that can improve the prformance of a react application.
Mentioning 5 tips to improve application
* By Using Immutable Data Structures
* Don't use class component, use functional component
* By Optimizing the dependencies
* By Using React empty fragments to avoid unwanted html div
* Avoiding Props in Initial States

2 What are the different ways to manage a state in a React application?

There area 4 types of different ways to manage a state in react application.
*LOCAL STATE: this state is managed by using (useState) react hook
* Global STATE: this state is data that we manage in multiple components
* Server STATE: Data Comes from the server and we integrate to our user interface of application
* URL STATE: Data exist on the url of our application, that includes pathname query parameter etc.


3. How does prototypical inheritance work?

*Prototypical inheritance is a feature in javascript. It is used to add methods and properties in objects of javascript. by using this method an object can inherite other object properties. For doing prototypical inheritance we use Object. getPrototypeOf . When function is javascript engin adds a prototype to the function.

4. Why you do not set the state directly in React?
There are some reason why we do not set the state directly.
*If we update directly the state variable, after calling the seState() may replace the previous update we made.
*Directly update state does not change this.state immediately. If we directly update the state value, we will lose control of the state acrosss all components of our appliction.

5 You have an array of products. Each product has a name, price, description, etc. How will you implement a search to find products by name?

To find the products by name we can use filter method. filter() method will give us an array as a return based on our condition. example code is written below.

const products = [
    {id: 1, name:'AB',price:12},
    {id: 2, name:'BC',price:13},
    {id: 3, name:'DE',price:14},
    {id: 4, name:'CD',price:15}
    ];
    
const result = products.filter(pd => pd.name.includes('C'));
console.log(result);






